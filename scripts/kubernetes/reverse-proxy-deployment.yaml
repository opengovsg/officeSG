apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.27.0 (HEAD)
    traefik.enable: "true"
    traefik.http.routers.traefik.rule: Host(`traefik.workadventure.localhost`)
    traefik.http.routers.traefik.service: api@internal
    traefik.port: "8080"
  creationTimestamp: null
  labels:
    io.kompose.service: reverse-proxy
  name: reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: reverse-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.27.0 (HEAD)
        traefik.enable: "true"
        traefik.http.routers.traefik.rule: Host(`traefik.workadventure.localhost`)
        traefik.http.routers.traefik.service: api@internal
        traefik.port: "8080"
      creationTimestamp: null
      labels:
        io.kompose.network/default: "true"
        io.kompose.service: reverse-proxy
    spec:
      containers:
        - args:
            - --api.insecure=true
            - --providers.docker
            - --entryPoints.web.address=:80
            - --providers.docker.exposedbydefault=false
          image: traefik:v2.8
          name: reverse-proxy
          ports:
            - containerPort: 80
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: reverse-proxy-claim0
      restartPolicy: Always
      volumes:
        - name: reverse-proxy-claim0
          persistentVolumeClaim:
            claimName: reverse-proxy-claim0
status: {}
