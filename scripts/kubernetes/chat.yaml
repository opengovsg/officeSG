apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.27.0 (HEAD)
    traefik.enable: "true"
    traefik.http.routers.front.rule: Host(`chat.{{SERVICE_DOMAIN}}`)
    traefik.http.routers.front.service: chat
    traefik.http.routers.chat.priority: "1"
    traefik.http.routers.chat.rule: HostRegexp(`{domain:.*}`)
    traefik.http.routers.chat.service: chat
    traefik.http.services.front.loadbalancer.server.port: "8080"
    traefik.http.services.chat.loadbalancer.server.port: "3000"
  creationTimestamp: null
  labels:
    io.kompose.service: chat
  name: chat
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: chat
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.27.0 (HEAD)
        traefik.enable: "true"
        traefik.http.routers.front.rule: Host(`api.{{SERVICE_DOMAIN}}`)
        traefik.http.routers.front.service: chat
        traefik.http.routers.chat.priority: "1"
        traefik.http.routers.chat.rule: HostRegexp(`{domain:.*}`)
        traefik.http.routers.chat.service: chat
        traefik.http.services.front.loadbalancer.server.port: "8080"
        traefik.http.services.chat.loadbalancer.server.port: "3000"
      creationTimestamp: null
      labels:
        io.kompose.service: chat
    spec:
      containers:
        #        - args:
        #            - npm
        #            - run
        #            - start #change from dev to start
        - env:
            - name: EJABBERD_DOMAIN
            - name: EJABBERD_WS_URI
#              value: ws://xmpp.{{SERVICE_DOMAIN}}:5443/ws
              value: wss://ejabberd.default.svc.cluster.local:5443/ws
            - name: EMBEDLY_KEY
            - name: ENABLE_CHAT_UPLOAD
            - name: ENABLE_OPENID
            - name: ICON_URL
              value: https://icon.{{SERVICE_DOMAIN}}
            - name: PLAY_URL
              value: https://play.{{SERVICE_DOMAIN}}
            - name: STARTUP_COMMAND_2
              value: ../npm-install.sh
            - name: STARTUP_COMMAND_3
              value: npm run typesafe-i18n
            - name: UPLOADER_URL
              value: https://uploader.{{SERVICE_DOMAIN}}
          image: {{CONTAINER_REGISTRY}}/officesg:chat-{{VERSION}}
          name: chat
          ports:
            #            - containerPort: 9229
            - name: http
              containerPort: 8080
              #              containerPort: 80
              protocol: TCP
            - name: http2
              containerPort: 50051
              protocol: TCP
#          resources: {}
          resources:
            requests:
              cpu: 500m
              memory: 6000Mi
          #          volumeMounts:
          #            - mountPath: /usr/src/app
          #              name: chat-claim0
      #          workingDir: /usr/src/app/chat
      restartPolicy: Always
#      volumes:
#        - name: chat-claim0
#          persistentVolumeClaim:
#            claimName: chat-claim0
status: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.27.0 (HEAD)
    traefik.enable: "true"
    traefik.http.routers.front.rule: Host(`front.{{SERVICE_DOMAIN}}`)
    traefik.http.routers.front.service: front
    traefik.http.routers.chat.priority: "1"
    traefik.http.routers.chat.rule: HostRegexp(`{domain:.*}`)
    traefik.http.routers.chat.service: chat
    traefik.http.services.front.loadbalancer.server.port: "8080"
    traefik.http.services.chat.loadbalancer.server.port: "3000"
  creationTimestamp: null
  labels:
    io.kompose.service: chat
    app.kubernetes.io/name: workadventure-chart
    app.kubernetes.io/instance: release-name
  name: chat
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 80
    - name: tcp
      port: 50051
      targetPort: 50051
  selector:
    io.kompose.service: chat
status:
  loadBalancer: {}
#spec:
#  type: LoadBalancer
#  ports:
#    - port: 80
#      targetPort: http
#      protocol: TCP
#      name: http
#    - port: 443
#      targetPort: http
#      protocol: TCP
#      name: https
#  selector:
#    app.kubernetes.io/name: workadventure-chart
#    app.kubernetes.io/instance: release-name
#    app.kubernetes.io/type: "chat"
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: chat
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chat
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chat
  labels:
    app.kubernetes.io/name: workadventure-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.7"
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - chat.{{SERVICE_DOMAIN}}
      secretName: front-tls
  rules:
    - host: chat.{{SERVICE_DOMAIN}}
      http:
        paths:
          - path: "/"
            pathType: Prefix
            chatend:
              service:
                name: chat
                port:
                  number: 80
