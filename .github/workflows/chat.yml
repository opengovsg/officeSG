#
# GitHub Actions workflow.
#
# Automatically deploys the "gateway" microservice on push.
#

name: Deploy chat

on:
  push:
    branches:
      - develop
    paths:
      - 'chat/**'
  workflow_dispatch:

jobs:

  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 50

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      KUBECONFIG_DATA: ${{ secrets.KUBE_CONFIG }}

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # login to private ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      #
      # Builds the Docker image.
      #
      - name: Build
        run: ./scripts/build-image.sh chat

      #
      # Publishes the Docker image to the container registry.
      #
      - name: Publish
        run: ./scripts/push-image.sh chat

      #
      # Installs Node.js (for figit).
      #
      - uses: actions/setup-node@v1
        with:
          node-version: 18

      #
      # Installs Figit.
      #
      - name: Install dependencies
        run: npm install

      #
      # Install Kubectl and connect to the cluster.
      #
      # https://github.com/marketplace/actions/kubernetes-cli-kubectl
      #
      #      - uses: tale/kubectl-action@v1
      #        with:
      #          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      #          kubectl-version: v1.24.2

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0'
        id: install

      - name: Update kube config
        run: aws eks update-kubeconfig --name my-demo-cluster --region ap-southeast-1
      - name: Print kubectl logs for debugging
        run: |
          kubectl get services
      #
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy
        run: npx figit ./scripts/kubernetes/chat.yaml --output yaml | kubectl apply -f -
